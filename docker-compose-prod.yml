version: "3.3"

services:
  gateway:
    build:
      context: apps/gateway
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - SOCKET_EVENT_SECRET=wTD0y:6Ch(Z|H[Xh<rp"1Gx)3J]N[c
      - REDIS_HOST=redis
      - REDIS_PASSWORD=9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
      - REDIS_PORT=6379
    depends_on:
      - redis
  
  redis:
    image: redis
    command: redis-server --requirepass 9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
    ports:
      - 6379:6379
    volumes:
      - ./data/redis:/data

  notifications:
    build:
      context: apps/notifications
      dockerfile: Dockerfile
      target: production
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - GATEWAY_PORT=3000
      - SOCKET_EVENT_SECRET=wTD0y:6Ch(Z|H[Xh<rp"1Gx)3J]N[c
      - REDIS_HOST=redis
      - REDIS_PASSWORD=9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
      - REDIS_PORT=6379
      - CLIENT_BASE_URL=http://127.0.0.1:8000
    depends_on:
      - redis

  users:
    build:
      context: apps/users
      dockerfile: Dockerfile
      target: production
    depends_on:
      - redis
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - REDIS_HOST=redis
      - REDIS_PASSWORD=9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
      - REDIS_PORT=6379

  cms:
    build:
      context: apps/cms
      dockerfile: Dockerfile
      target: production
    ports:
      - "3003:3003"
    depends_on:
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3003
      - REDIS_HOST=redis
      - REDIS_PASSWORD=9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
      - REDIS_PORT=6379

  posts:
    build:
      context: apps/posts
      dockerfile: Dockerfile
      target: production
    ports:
      - "3004:3004"
    depends_on:
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3004
      - REDIS_HOST=redis
      - REDIS_PASSWORD=9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
      - REDIS_PORT=6379
      - RECOMMENDATIONS_HOST=http://recommendations:8000

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - ELASTIC_PASSWORD=Y3KgattXgebGXUd
    volumes:
      - ./data/es:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - queueoverflow

  search:
    build:
      context: apps/search
      dockerfile: Dockerfile
      target: production
    depends_on:
      - redis
      - elasticsearch
    networks:
      - queueoverflow
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=Y3KgattXgebGXUd
      - REDIS_HOST=redis
      - REDIS_PASSWORD=9QYVMZNxuSmPp1GyvNs38FKh4rqBMZfCMrCWkXlnmpSm
      - REDIS_PORT=6379
    
  recommendations:
    build:
      context: apps/recommendations
    ports:
      - "8000:3006"
    environment:
      - DATABASE_URL=postgresql://hoanthui123:t3bi4hmxSYBr@ep-wandering-cake-16204738.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
      - RABBITMQ_URL=amqps://pkeilyyo:nfbO7ZksScLaUj47ml4lPp3upf2fLHtN@octopus.rmq3.cloudamqp.com/pkeilyyo

networks:
  queueoverflow:
    name: queueoverflow
    external: true
    driver: bridge